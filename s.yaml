# ------------------------------------
#   If you need English case, you can refer to [s_en.yaml] file
# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc
#   组件帮助文档：https://www.serverless-devs.com/fc/readme
#   Yaml参考文档：https://www.serverless-devs.com/fc/yaml/readme
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://www.serverless-devs.com/fc/tips
#   关于如何做CICD等问题，可以参考：https://www.serverless-devs.com/serverless-devs/cicd
#   关于如何进行环境划分等问题，可以参考：https://www.serverless-devs.com/serverless-devs/extend
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------
edition: 1.0.0
name: start-ai
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "undefined"

vars: # 全局变量
  region: "cn-beijing"
  bucket: "mytoolzone"
  source: "origin/"
  service:
    name: "start-ai-9rnb"
    role: "acs:ram::1582994461283028:role/aliyunfcdefaultrole"

services:
  image_custom: # 业务名称/模块名称
    component: fc    # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    actions: # 自定义执行逻辑，关于actions 的使用，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#行为描述
      pre-deploy: # 在deploy之前运行
        - component: fc build --use-docker
    props:
      region: ${vars.region}        # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: image_custom
        description: 图片目标检测
        runtime: custom
        codeUri: ./custom
        memorySize: 3072
        timeout: 60
        customRuntimeConfig:
          command:
            - python
          args:
            - index.py
        environmentVariables:
          SOURCE: ${vars.source}
          TARGET: "result/"
          ROLE: "acs:ram::1582994461283028:role/aliyunosseventnotificationrole"
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*
  # image_python: # 业务名称/模块名称
  #   component: fc    # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
  #   # actions: # 自定义执行逻辑，关于actions 的使用，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#行为描述
  #   #   pre-deploy: # 在deploy之前运行
  #   #     - component: fc build
  #   props:
  #     region: ${vars.region}        # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
  #     service: ${vars.service}
  #     function:
  #       name: image_python
  #       description: 图片目标检测
  #       runtime: python3
  #       codeUri: ./oriruntime
  #       memorySize: 3072
  #       timeout: 60
  #       handler: handler.handler
  #       environmentVariables:
  #         OSS_BUCKET: ${vars.bucket}
  #         OSS_ENDPOINT: oss-${vars.region}.aliyuncs.com
  #         SOURCE: ${vars.source}
  #         TARGET: "result/"
  #     triggers:
  #       - name: image_python
  #         role: "acs:ram::1582994461283028:role/aliyunosseventnotificationrole"
  #         #sourceArn: acs:oss:${vars.region}:${config(AccountID)}:${vars.bucket}
  #         type: oss
  #         config:
  #           events:
  #             - oss:ObjectCreated:*
  #           filter:
  #             Key:
  #               Prefix: ${vars.source}
  #               Suffix: ''
  #           bucketName: ${vars.bucket}
